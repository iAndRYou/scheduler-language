# Generated from ../Scheduler.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,64,517,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,1,0,1,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,174,8,3,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,3,4,201,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
        1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,
        1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,
        1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,19,1,19,
        1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,
        1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,
        1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,
        1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,
        1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,
        1,41,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,
        1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
        1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,
        1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
        1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,
        1,54,1,55,3,55,412,8,55,1,55,4,55,415,8,55,11,55,12,55,416,1,56,
        1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,3,56,428,8,56,1,57,1,57,
        5,57,432,8,57,10,57,12,57,435,9,57,1,57,1,57,1,58,3,58,440,8,58,
        1,58,1,58,1,58,1,58,1,58,3,58,447,8,58,1,58,1,58,3,58,451,8,58,1,
        58,1,58,1,58,3,58,456,8,58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,
        59,1,59,1,59,3,59,468,8,59,1,59,1,59,1,59,1,59,1,60,4,60,475,8,60,
        11,60,12,60,476,1,60,1,60,1,61,1,61,5,61,483,8,61,10,61,12,61,486,
        9,61,1,62,1,62,1,62,1,62,5,62,492,8,62,10,62,12,62,495,9,62,1,62,
        3,62,498,8,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,5,63,508,8,
        63,10,63,12,63,511,9,63,1,63,1,63,1,63,1,63,1,63,2,493,509,0,64,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
        71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,
        93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
        113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,1,0,11,1,
        0,48,57,4,0,32,32,48,57,65,90,97,122,1,0,49,57,1,0,49,50,1,0,48,
        49,1,0,48,50,1,0,48,51,1,0,48,53,3,0,9,10,13,13,32,32,3,0,65,90,
        95,95,97,122,4,0,48,57,65,90,95,95,97,122,539,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
        0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
        0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
        0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,
        0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
        0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,
        0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
        113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,
        0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,1,129,1,0,0,0,3,131,
        1,0,0,0,5,142,1,0,0,0,7,173,1,0,0,0,9,200,1,0,0,0,11,202,1,0,0,0,
        13,208,1,0,0,0,15,212,1,0,0,0,17,217,1,0,0,0,19,225,1,0,0,0,21,230,
        1,0,0,0,23,232,1,0,0,0,25,234,1,0,0,0,27,236,1,0,0,0,29,238,1,0,
        0,0,31,241,1,0,0,0,33,244,1,0,0,0,35,246,1,0,0,0,37,248,1,0,0,0,
        39,251,1,0,0,0,41,254,1,0,0,0,43,258,1,0,0,0,45,261,1,0,0,0,47,265,
        1,0,0,0,49,268,1,0,0,0,51,270,1,0,0,0,53,272,1,0,0,0,55,274,1,0,
        0,0,57,276,1,0,0,0,59,278,1,0,0,0,61,280,1,0,0,0,63,282,1,0,0,0,
        65,284,1,0,0,0,67,286,1,0,0,0,69,300,1,0,0,0,71,304,1,0,0,0,73,311,
        1,0,0,0,75,318,1,0,0,0,77,322,1,0,0,0,79,328,1,0,0,0,81,339,1,0,
        0,0,83,342,1,0,0,0,85,345,1,0,0,0,87,349,1,0,0,0,89,352,1,0,0,0,
        91,357,1,0,0,0,93,362,1,0,0,0,95,366,1,0,0,0,97,372,1,0,0,0,99,379,
        1,0,0,0,101,385,1,0,0,0,103,387,1,0,0,0,105,389,1,0,0,0,107,398,
        1,0,0,0,109,404,1,0,0,0,111,411,1,0,0,0,113,427,1,0,0,0,115,429,
        1,0,0,0,117,446,1,0,0,0,119,467,1,0,0,0,121,474,1,0,0,0,123,480,
        1,0,0,0,125,487,1,0,0,0,127,503,1,0,0,0,129,130,5,59,0,0,130,2,1,
        0,0,0,131,132,5,83,0,0,132,133,5,84,0,0,133,134,5,65,0,0,134,135,
        5,82,0,0,135,136,5,84,0,0,136,137,5,32,0,0,137,138,5,68,0,0,138,
        139,5,65,0,0,139,140,5,84,0,0,140,141,5,69,0,0,141,4,1,0,0,0,142,
        143,5,69,0,0,143,144,5,78,0,0,144,145,5,68,0,0,145,146,5,32,0,0,
        146,147,5,68,0,0,147,148,5,65,0,0,148,149,5,84,0,0,149,150,5,69,
        0,0,150,6,1,0,0,0,151,152,5,83,0,0,152,153,5,84,0,0,153,154,5,65,
        0,0,154,155,5,82,0,0,155,174,5,84,0,0,156,157,5,69,0,0,157,158,5,
        78,0,0,158,174,5,68,0,0,159,160,5,83,0,0,160,161,5,85,0,0,161,162,
        5,66,0,0,162,163,5,74,0,0,163,164,5,69,0,0,164,165,5,67,0,0,165,
        174,5,84,0,0,166,167,5,84,0,0,167,168,5,69,0,0,168,169,5,65,0,0,
        169,170,5,67,0,0,170,171,5,72,0,0,171,172,5,69,0,0,172,174,5,82,
        0,0,173,151,1,0,0,0,173,156,1,0,0,0,173,159,1,0,0,0,173,166,1,0,
        0,0,174,8,1,0,0,0,175,176,5,73,0,0,176,177,5,78,0,0,177,201,5,84,
        0,0,178,179,5,66,0,0,179,180,5,79,0,0,180,181,5,79,0,0,181,201,5,
        76,0,0,182,183,5,83,0,0,183,184,5,84,0,0,184,185,5,82,0,0,185,186,
        5,73,0,0,186,187,5,78,0,0,187,201,5,71,0,0,188,189,5,68,0,0,189,
        190,5,65,0,0,190,191,5,84,0,0,191,201,5,69,0,0,192,193,5,84,0,0,
        193,194,5,73,0,0,194,195,5,77,0,0,195,201,5,69,0,0,196,197,5,86,
        0,0,197,198,5,79,0,0,198,199,5,73,0,0,199,201,5,68,0,0,200,175,1,
        0,0,0,200,178,1,0,0,0,200,182,1,0,0,0,200,188,1,0,0,0,200,192,1,
        0,0,0,200,196,1,0,0,0,201,10,1,0,0,0,202,203,5,67,0,0,203,204,5,
        76,0,0,204,205,5,65,0,0,205,206,5,83,0,0,206,207,5,83,0,0,207,12,
        1,0,0,0,208,209,5,68,0,0,209,210,5,65,0,0,210,211,5,89,0,0,211,14,
        1,0,0,0,212,213,5,87,0,0,213,214,5,69,0,0,214,215,5,69,0,0,215,216,
        5,75,0,0,216,16,1,0,0,0,217,218,5,67,0,0,218,219,5,76,0,0,219,220,
        5,65,0,0,220,221,5,83,0,0,221,222,5,83,0,0,222,223,5,69,0,0,223,
        224,5,83,0,0,224,18,1,0,0,0,225,226,5,68,0,0,226,227,5,65,0,0,227,
        228,5,89,0,0,228,229,5,83,0,0,229,20,1,0,0,0,230,231,5,42,0,0,231,
        22,1,0,0,0,232,233,5,47,0,0,233,24,1,0,0,0,234,235,5,43,0,0,235,
        26,1,0,0,0,236,237,5,45,0,0,237,28,1,0,0,0,238,239,5,61,0,0,239,
        240,5,61,0,0,240,30,1,0,0,0,241,242,5,33,0,0,242,243,5,61,0,0,243,
        32,1,0,0,0,244,245,5,60,0,0,245,34,1,0,0,0,246,247,5,62,0,0,247,
        36,1,0,0,0,248,249,5,60,0,0,249,250,5,61,0,0,250,38,1,0,0,0,251,
        252,5,62,0,0,252,253,5,61,0,0,253,40,1,0,0,0,254,255,5,65,0,0,255,
        256,5,78,0,0,256,257,5,68,0,0,257,42,1,0,0,0,258,259,5,79,0,0,259,
        260,5,82,0,0,260,44,1,0,0,0,261,262,5,78,0,0,262,263,5,79,0,0,263,
        264,5,84,0,0,264,46,1,0,0,0,265,266,5,73,0,0,266,267,5,78,0,0,267,
        48,1,0,0,0,268,269,5,35,0,0,269,50,1,0,0,0,270,271,5,40,0,0,271,
        52,1,0,0,0,272,273,5,41,0,0,273,54,1,0,0,0,274,275,5,91,0,0,275,
        56,1,0,0,0,276,277,5,93,0,0,277,58,1,0,0,0,278,279,5,46,0,0,279,
        60,1,0,0,0,280,281,5,44,0,0,281,62,1,0,0,0,282,283,5,58,0,0,283,
        64,1,0,0,0,284,285,5,61,0,0,285,66,1,0,0,0,286,287,5,67,0,0,287,
        288,5,79,0,0,288,289,5,76,0,0,289,290,5,76,0,0,290,291,5,69,0,0,
        291,292,5,67,0,0,292,293,5,84,0,0,293,294,5,73,0,0,294,295,5,79,
        0,0,295,296,5,78,0,0,296,297,5,32,0,0,297,298,5,79,0,0,298,299,5,
        70,0,0,299,68,1,0,0,0,300,301,5,65,0,0,301,302,5,68,0,0,302,303,
        5,68,0,0,303,70,1,0,0,0,304,305,5,85,0,0,305,306,5,80,0,0,306,307,
        5,68,0,0,307,308,5,65,0,0,308,309,5,84,0,0,309,310,5,69,0,0,310,
        72,1,0,0,0,311,312,5,68,0,0,312,313,5,69,0,0,313,314,5,76,0,0,314,
        315,5,69,0,0,315,316,5,84,0,0,316,317,5,69,0,0,317,74,1,0,0,0,318,
        319,5,71,0,0,319,320,5,69,0,0,320,321,5,84,0,0,321,76,1,0,0,0,322,
        323,5,87,0,0,323,324,5,72,0,0,324,325,5,69,0,0,325,326,5,82,0,0,
        326,327,5,69,0,0,327,78,1,0,0,0,328,329,5,83,0,0,329,330,5,65,0,
        0,330,331,5,84,0,0,331,332,5,73,0,0,332,333,5,83,0,0,333,334,5,70,
        0,0,334,335,5,89,0,0,335,336,5,73,0,0,336,337,5,78,0,0,337,338,5,
        71,0,0,338,80,1,0,0,0,339,340,5,65,0,0,340,341,5,84,0,0,341,82,1,
        0,0,0,342,343,5,79,0,0,343,344,5,78,0,0,344,84,1,0,0,0,345,346,5,
        68,0,0,346,347,5,69,0,0,347,348,5,70,0,0,348,86,1,0,0,0,349,350,
        5,73,0,0,350,351,5,70,0,0,351,88,1,0,0,0,352,353,5,69,0,0,353,354,
        5,76,0,0,354,355,5,73,0,0,355,356,5,70,0,0,356,90,1,0,0,0,357,358,
        5,69,0,0,358,359,5,76,0,0,359,360,5,83,0,0,360,361,5,69,0,0,361,
        92,1,0,0,0,362,363,5,70,0,0,363,364,5,79,0,0,364,365,5,82,0,0,365,
        94,1,0,0,0,366,367,5,87,0,0,367,368,5,72,0,0,368,369,5,73,0,0,369,
        370,5,76,0,0,370,371,5,69,0,0,371,96,1,0,0,0,372,373,5,82,0,0,373,
        374,5,69,0,0,374,375,5,84,0,0,375,376,5,85,0,0,376,377,5,82,0,0,
        377,378,5,78,0,0,378,98,1,0,0,0,379,380,5,66,0,0,380,381,5,82,0,
        0,381,382,5,69,0,0,382,383,5,65,0,0,383,384,5,75,0,0,384,100,1,0,
        0,0,385,386,5,123,0,0,386,102,1,0,0,0,387,388,5,125,0,0,388,104,
        1,0,0,0,389,390,5,68,0,0,390,391,5,73,0,0,391,392,5,83,0,0,392,393,
        5,84,0,0,393,394,5,73,0,0,394,395,5,78,0,0,395,396,5,67,0,0,396,
        397,5,84,0,0,397,106,1,0,0,0,398,399,5,80,0,0,399,400,5,82,0,0,400,
        401,5,73,0,0,401,402,5,78,0,0,402,403,5,84,0,0,403,108,1,0,0,0,404,
        405,5,68,0,0,405,406,5,65,0,0,406,407,5,84,0,0,407,408,5,69,0,0,
        408,409,5,83,0,0,409,110,1,0,0,0,410,412,5,45,0,0,411,410,1,0,0,
        0,411,412,1,0,0,0,412,414,1,0,0,0,413,415,7,0,0,0,414,413,1,0,0,
        0,415,416,1,0,0,0,416,414,1,0,0,0,416,417,1,0,0,0,417,112,1,0,0,
        0,418,419,5,84,0,0,419,420,5,114,0,0,420,421,5,117,0,0,421,428,5,
        101,0,0,422,423,5,70,0,0,423,424,5,97,0,0,424,425,5,108,0,0,425,
        426,5,115,0,0,426,428,5,101,0,0,427,418,1,0,0,0,427,422,1,0,0,0,
        428,114,1,0,0,0,429,433,5,34,0,0,430,432,7,1,0,0,431,430,1,0,0,0,
        432,435,1,0,0,0,433,431,1,0,0,0,433,434,1,0,0,0,434,436,1,0,0,0,
        435,433,1,0,0,0,436,437,5,34,0,0,437,116,1,0,0,0,438,440,5,48,0,
        0,439,438,1,0,0,0,439,440,1,0,0,0,440,441,1,0,0,0,441,447,7,2,0,
        0,442,443,7,3,0,0,443,447,7,0,0,0,444,445,5,51,0,0,445,447,7,4,0,
        0,446,439,1,0,0,0,446,442,1,0,0,0,446,444,1,0,0,0,447,448,1,0,0,
        0,448,455,5,47,0,0,449,451,5,48,0,0,450,449,1,0,0,0,450,451,1,0,
        0,0,451,452,1,0,0,0,452,456,7,2,0,0,453,454,5,49,0,0,454,456,7,5,
        0,0,455,450,1,0,0,0,455,453,1,0,0,0,456,457,1,0,0,0,457,458,5,47,
        0,0,458,459,7,0,0,0,459,460,7,0,0,0,460,461,7,0,0,0,461,462,7,0,
        0,0,462,118,1,0,0,0,463,464,7,4,0,0,464,468,7,0,0,0,465,466,5,50,
        0,0,466,468,7,6,0,0,467,463,1,0,0,0,467,465,1,0,0,0,468,469,1,0,
        0,0,469,470,5,58,0,0,470,471,7,7,0,0,471,472,7,0,0,0,472,120,1,0,
        0,0,473,475,7,8,0,0,474,473,1,0,0,0,475,476,1,0,0,0,476,474,1,0,
        0,0,476,477,1,0,0,0,477,478,1,0,0,0,478,479,6,60,0,0,479,122,1,0,
        0,0,480,484,7,9,0,0,481,483,7,10,0,0,482,481,1,0,0,0,483,486,1,0,
        0,0,484,482,1,0,0,0,484,485,1,0,0,0,485,124,1,0,0,0,486,484,1,0,
        0,0,487,488,5,47,0,0,488,489,5,47,0,0,489,493,1,0,0,0,490,492,9,
        0,0,0,491,490,1,0,0,0,492,495,1,0,0,0,493,494,1,0,0,0,493,491,1,
        0,0,0,494,497,1,0,0,0,495,493,1,0,0,0,496,498,5,13,0,0,497,496,1,
        0,0,0,497,498,1,0,0,0,498,499,1,0,0,0,499,500,5,10,0,0,500,501,1,
        0,0,0,501,502,6,62,1,0,502,126,1,0,0,0,503,504,5,47,0,0,504,505,
        5,42,0,0,505,509,1,0,0,0,506,508,9,0,0,0,507,506,1,0,0,0,508,511,
        1,0,0,0,509,510,1,0,0,0,509,507,1,0,0,0,510,512,1,0,0,0,511,509,
        1,0,0,0,512,513,5,42,0,0,513,514,5,47,0,0,514,515,1,0,0,0,515,516,
        6,63,1,0,516,128,1,0,0,0,17,0,173,200,411,416,427,433,439,446,450,
        455,467,476,484,493,497,509,2,6,0,0,0,1,0
    ]

class SchedulerLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    CLASS_ATTRIBUTE = 4
    TYPENAME = 5
    CLASSNAME = 6
    DAYNAME = 7
    WEEKNAME = 8
    CLASSESTOKEN = 9
    DAYSTOKEN = 10
    MULTIPLY = 11
    DIVIDE = 12
    ADD = 13
    SUBTRACT = 14
    EQUAL = 15
    NOT_EQUAL = 16
    LESS_THAN = 17
    GREATER_THAN = 18
    LESS_THAN_OR_EQUAL = 19
    GREATER_THAN_OR_EQUAL = 20
    AND = 21
    OR = 22
    NOT = 23
    IN = 24
    OVERLAP = 25
    OPEN_PAREN = 26
    CLOSE_PAREN = 27
    OPEN_BRACKET = 28
    CLOSE_BRACKET = 29
    DOT = 30
    COMMA = 31
    COLON = 32
    SINGLEEQUAL = 33
    COLLECTION_OF = 34
    ADD_CANVA = 35
    UPDATE_CANVA = 36
    DELETE_CANVA = 37
    GET_CANVA = 38
    WHERE = 39
    SATISFYING = 40
    AT = 41
    ON = 42
    DEF = 43
    IF = 44
    ELIF = 45
    ELSE = 46
    FOR = 47
    WHILE = 48
    RETURN = 49
    BREAK = 50
    OPEN_CURLY = 51
    CLOSE_CURLY = 52
    DISTINCT = 53
    PRINT = 54
    DATESTOKEN = 55
    INT = 56
    BOOL = 57
    STRING = 58
    DATE = 59
    TIME = 60
    WS = 61
    VARNAME = 62
    COMMENT_LINE = 63
    COMMENT = 64

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'START DATE'", "'END DATE'", "'CLASS'", "'DAY'", "'WEEK'", 
            "'CLASSES'", "'DAYS'", "'*'", "'/'", "'+'", "'-'", "'=='", "'!='", 
            "'<'", "'>'", "'<='", "'>='", "'AND'", "'OR'", "'NOT'", "'IN'", 
            "'#'", "'('", "')'", "'['", "']'", "'.'", "','", "':'", "'='", 
            "'COLLECTION OF'", "'ADD'", "'UPDATE'", "'DELETE'", "'GET'", 
            "'WHERE'", "'SATISFYING'", "'AT'", "'ON'", "'DEF'", "'IF'", 
            "'ELIF'", "'ELSE'", "'FOR'", "'WHILE'", "'RETURN'", "'BREAK'", 
            "'{'", "'}'", "'DISTINCT'", "'PRINT'", "'DATES'" ]

    symbolicNames = [ "<INVALID>",
            "CLASS_ATTRIBUTE", "TYPENAME", "CLASSNAME", "DAYNAME", "WEEKNAME", 
            "CLASSESTOKEN", "DAYSTOKEN", "MULTIPLY", "DIVIDE", "ADD", "SUBTRACT", 
            "EQUAL", "NOT_EQUAL", "LESS_THAN", "GREATER_THAN", "LESS_THAN_OR_EQUAL", 
            "GREATER_THAN_OR_EQUAL", "AND", "OR", "NOT", "IN", "OVERLAP", 
            "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACKET", "CLOSE_BRACKET", 
            "DOT", "COMMA", "COLON", "SINGLEEQUAL", "COLLECTION_OF", "ADD_CANVA", 
            "UPDATE_CANVA", "DELETE_CANVA", "GET_CANVA", "WHERE", "SATISFYING", 
            "AT", "ON", "DEF", "IF", "ELIF", "ELSE", "FOR", "WHILE", "RETURN", 
            "BREAK", "OPEN_CURLY", "CLOSE_CURLY", "DISTINCT", "PRINT", "DATESTOKEN", 
            "INT", "BOOL", "STRING", "DATE", "TIME", "WS", "VARNAME", "COMMENT_LINE", 
            "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "CLASS_ATTRIBUTE", "TYPENAME", 
                  "CLASSNAME", "DAYNAME", "WEEKNAME", "CLASSESTOKEN", "DAYSTOKEN", 
                  "MULTIPLY", "DIVIDE", "ADD", "SUBTRACT", "EQUAL", "NOT_EQUAL", 
                  "LESS_THAN", "GREATER_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN_OR_EQUAL", 
                  "AND", "OR", "NOT", "IN", "OVERLAP", "OPEN_PAREN", "CLOSE_PAREN", 
                  "OPEN_BRACKET", "CLOSE_BRACKET", "DOT", "COMMA", "COLON", 
                  "SINGLEEQUAL", "COLLECTION_OF", "ADD_CANVA", "UPDATE_CANVA", 
                  "DELETE_CANVA", "GET_CANVA", "WHERE", "SATISFYING", "AT", 
                  "ON", "DEF", "IF", "ELIF", "ELSE", "FOR", "WHILE", "RETURN", 
                  "BREAK", "OPEN_CURLY", "CLOSE_CURLY", "DISTINCT", "PRINT", 
                  "DATESTOKEN", "INT", "BOOL", "STRING", "DATE", "TIME", 
                  "WS", "VARNAME", "COMMENT_LINE", "COMMENT" ]

    grammarFileName = "Scheduler.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


