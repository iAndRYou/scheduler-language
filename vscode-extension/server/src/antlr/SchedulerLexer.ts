// Generated from ./src/antlr/Scheduler.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class SchedulerLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly CLASS_ATTRIBUTE = 4;
	public static readonly TYPENAME = 5;
	public static readonly CLASSNAME = 6;
	public static readonly DAYNAME = 7;
	public static readonly CLASSESTOKEN = 8;
	public static readonly DAYSTOKEN = 9;
	public static readonly MULTIPLY = 10;
	public static readonly DIVIDE = 11;
	public static readonly ADD = 12;
	public static readonly SUBTRACT = 13;
	public static readonly EQUAL = 14;
	public static readonly NOT_EQUAL = 15;
	public static readonly LESS_THAN = 16;
	public static readonly GREATER_THAN = 17;
	public static readonly LESS_THAN_OR_EQUAL = 18;
	public static readonly GREATER_THAN_OR_EQUAL = 19;
	public static readonly AND = 20;
	public static readonly OR = 21;
	public static readonly NOT = 22;
	public static readonly IN = 23;
	public static readonly OVERLAP = 24;
	public static readonly OPEN_PAREN = 25;
	public static readonly CLOSE_PAREN = 26;
	public static readonly OPEN_BRACKET = 27;
	public static readonly CLOSE_BRACKET = 28;
	public static readonly DOT = 29;
	public static readonly COMMA = 30;
	public static readonly COLON = 31;
	public static readonly SINGLEEQUAL = 32;
	public static readonly COLLECTION_OF = 33;
	public static readonly ADD_CANVA = 34;
	public static readonly UPDATE_CANVA = 35;
	public static readonly DELETE_CANVA = 36;
	public static readonly GET_CANVA = 37;
	public static readonly WHERE = 38;
	public static readonly SATISFYING = 39;
	public static readonly AT = 40;
	public static readonly ON = 41;
	public static readonly DEF = 42;
	public static readonly IF = 43;
	public static readonly ELIF = 44;
	public static readonly ELSE = 45;
	public static readonly FOR = 46;
	public static readonly WHILE = 47;
	public static readonly RETURN = 48;
	public static readonly BREAK = 49;
	public static readonly OPEN_CURLY = 50;
	public static readonly CLOSE_CURLY = 51;
	public static readonly DISTINCT = 52;
	public static readonly PRINT = 53;
	public static readonly DATESTOKEN = 54;
	public static readonly LOADTOKEN = 55;
	public static readonly DUMPTOKEN = 56;
	public static readonly INT = 57;
	public static readonly BOOL = 58;
	public static readonly STRING = 59;
	public static readonly DATE = 60;
	public static readonly TIME = 61;
	public static readonly WS = 62;
	public static readonly VARNAME = 63;
	public static readonly COMMENT_LINE = 64;
	public static readonly COMMENT = 65;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "CLASS_ATTRIBUTE", "TYPENAME", "CLASSNAME", "DAYNAME", 
		"CLASSESTOKEN", "DAYSTOKEN", "MULTIPLY", "DIVIDE", "ADD", "SUBTRACT", 
		"EQUAL", "NOT_EQUAL", "LESS_THAN", "GREATER_THAN", "LESS_THAN_OR_EQUAL", 
		"GREATER_THAN_OR_EQUAL", "AND", "OR", "NOT", "IN", "OVERLAP", "OPEN_PAREN", 
		"CLOSE_PAREN", "OPEN_BRACKET", "CLOSE_BRACKET", "DOT", "COMMA", "COLON", 
		"SINGLEEQUAL", "COLLECTION_OF", "ADD_CANVA", "UPDATE_CANVA", "DELETE_CANVA", 
		"GET_CANVA", "WHERE", "SATISFYING", "AT", "ON", "DEF", "IF", "ELIF", "ELSE", 
		"FOR", "WHILE", "RETURN", "BREAK", "OPEN_CURLY", "CLOSE_CURLY", "DISTINCT", 
		"PRINT", "DATESTOKEN", "LOADTOKEN", "DUMPTOKEN", "INT", "BOOL", "STRING", 
		"DATE", "TIME", "WS", "VARNAME", "COMMENT_LINE", "COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'START DATE'", "'END DATE'", undefined, undefined, 
		"'CLASS'", "'DAY'", "'CLASSES'", "'DAYS'", "'*'", "'/'", "'+'", "'-'", 
		"'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'AND'", "'OR'", "'NOT'", 
		"'IN'", "'@'", "'('", "')'", "'['", "']'", "'.'", "','", "':'", "'='", 
		"'COLLECTION OF'", "'ADD'", "'UPDATE'", "'DELETE'", "'GET'", "'WHERE'", 
		"'SATISFYING'", "'AT'", "'ON'", "'DEF'", "'IF'", "'ELIF'", "'ELSE'", "'FOR'", 
		"'WHILE'", "'RETURN'", "'BREAK'", "'{'", "'}'", "'DISTINCT'", "'PRINT'", 
		"'DATES'", "'LOAD'", "'DUMP'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, "CLASS_ATTRIBUTE", "TYPENAME", 
		"CLASSNAME", "DAYNAME", "CLASSESTOKEN", "DAYSTOKEN", "MULTIPLY", "DIVIDE", 
		"ADD", "SUBTRACT", "EQUAL", "NOT_EQUAL", "LESS_THAN", "GREATER_THAN", 
		"LESS_THAN_OR_EQUAL", "GREATER_THAN_OR_EQUAL", "AND", "OR", "NOT", "IN", 
		"OVERLAP", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACKET", "CLOSE_BRACKET", 
		"DOT", "COMMA", "COLON", "SINGLEEQUAL", "COLLECTION_OF", "ADD_CANVA", 
		"UPDATE_CANVA", "DELETE_CANVA", "GET_CANVA", "WHERE", "SATISFYING", "AT", 
		"ON", "DEF", "IF", "ELIF", "ELSE", "FOR", "WHILE", "RETURN", "BREAK", 
		"OPEN_CURLY", "CLOSE_CURLY", "DISTINCT", "PRINT", "DATESTOKEN", "LOADTOKEN", 
		"DUMPTOKEN", "INT", "BOOL", "STRING", "DATE", "TIME", "WS", "VARNAME", 
		"COMMENT_LINE", "COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SchedulerLexer._LITERAL_NAMES, SchedulerLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return SchedulerLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(SchedulerLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Scheduler.g4"; }

	// @Override
	public get ruleNames(): string[] { return SchedulerLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return SchedulerLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return SchedulerLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return SchedulerLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02C\u0210\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x05\x05\xB2\n\x05\x03\x06\x03\x06" +
		"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06" +
		"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06" +
		"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x05\x06\xCD\n\x06\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18" +
		"\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D" +
		"\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03" +
		"\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03" +
		"\"\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03%\x03%\x03" +
		"%\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03\'\x03" +
		"\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03" +
		")\x03)\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03-\x03-\x03" +
		"-\x03-\x03-\x03.\x03.\x03.\x03.\x03.\x03/\x03/\x03/\x03/\x030\x030\x03" +
		"0\x030\x030\x030\x031\x031\x031\x031\x031\x031\x031\x032\x032\x032\x03" +
		"2\x032\x032\x033\x033\x034\x034\x035\x035\x035\x035\x035\x035\x035\x03" +
		"5\x035\x036\x036\x036\x036\x036\x036\x037\x037\x037\x037\x037\x037\x03" +
		"8\x038\x038\x038\x038\x039\x039\x039\x039\x039\x03:\x05:\u01A5\n:\x03" +
		":\x06:\u01A8\n:\r:\x0E:\u01A9\x03;\x03;\x03;\x03;\x03;\x03;\x03;\x03;" +
		"\x03;\x05;\u01B5\n;\x03<\x03<\x07<\u01B9\n<\f<\x0E<\u01BC\v<\x03<\x03" +
		"<\x03=\x05=\u01C1\n=\x03=\x03=\x03=\x03=\x03=\x05=\u01C8\n=\x03=\x03=" +
		"\x05=\u01CC\n=\x03=\x03=\x03=\x05=\u01D1\n=\x03=\x03=\x03=\x03=\x03=\x03" +
		"=\x03>\x05>\u01DA\n>\x03>\x03>\x03>\x05>\u01DF\n>\x03>\x03>\x03>\x03>" +
		"\x03?\x06?\u01E6\n?\r?\x0E?\u01E7\x03?\x03?\x03@\x03@\x07@\u01EE\n@\f" +
		"@\x0E@\u01F1\v@\x03A\x03A\x03A\x03A\x07A\u01F7\nA\fA\x0EA\u01FA\vA\x03" +
		"A\x05A\u01FD\nA\x03A\x03A\x03A\x03A\x03B\x03B\x03B\x03B\x07B\u0207\nB" +
		"\fB\x0EB\u020A\vB\x03B\x03B\x03B\x03B\x03B\x04\u01F8\u0208\x02\x02C\x03" +
		"\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t" +
		"\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02" +
		"\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17" +
		"-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F" +
		"=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S" +
		"\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x02" +
		"6k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02@\x7F\x02" +
		"A\x81\x02B\x83\x02C\x03\x02\r\x03\x022;\x03\x02$$\x03\x023;\x03\x0234" +
		"\x03\x0223\x03\x0224\x03\x0225\x03\x0227\x05\x02\v\f\x0F\x0F\"\"\x05\x02" +
		"C\\aac|\x06\x022;C\\aac|\x02\u0227\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02" +
		"\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02" +
		"+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02" +
		"\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02" +
		"M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02" +
		"\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02" +
		"\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03" +
		"\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02" +
		"\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02" +
		"o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02" +
		"\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02" +
		"\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02" +
		"\x02\x83\x03\x02\x02\x02\x03\x85\x03\x02\x02\x02\x05\x87\x03\x02\x02\x02" +
		"\x07\x92\x03\x02\x02\x02\t\xB1\x03\x02\x02\x02\v\xCC\x03\x02\x02\x02\r" +
		"\xCE\x03\x02\x02\x02\x0F\xD4\x03\x02\x02\x02\x11\xD8\x03\x02\x02\x02\x13" +
		"\xE0\x03\x02\x02\x02\x15\xE5\x03\x02\x02\x02\x17\xE7\x03\x02\x02\x02\x19" +
		"\xE9\x03\x02\x02\x02\x1B\xEB\x03\x02\x02\x02\x1D\xED\x03\x02\x02\x02\x1F" +
		"\xF0\x03\x02\x02\x02!\xF3\x03\x02\x02\x02#\xF5\x03\x02\x02\x02%\xF7\x03" +
		"\x02\x02\x02\'\xFA\x03\x02\x02\x02)\xFD\x03\x02\x02\x02+\u0101\x03\x02" +
		"\x02\x02-\u0104\x03\x02\x02\x02/\u0108\x03\x02\x02\x021\u010B\x03\x02" +
		"\x02\x023\u010D\x03\x02\x02\x025\u010F\x03\x02\x02\x027\u0111\x03\x02" +
		"\x02\x029\u0113\x03\x02\x02\x02;\u0115\x03\x02\x02\x02=\u0117\x03\x02" +
		"\x02\x02?\u0119\x03\x02\x02\x02A\u011B\x03\x02\x02\x02C\u011D\x03\x02" +
		"\x02\x02E\u012B\x03\x02\x02\x02G\u012F\x03\x02\x02\x02I\u0136\x03\x02" +
		"\x02\x02K\u013D\x03\x02\x02\x02M\u0141\x03\x02\x02\x02O\u0147\x03\x02" +
		"\x02\x02Q\u0152\x03\x02\x02\x02S\u0155\x03\x02\x02\x02U\u0158\x03\x02" +
		"\x02\x02W\u015C\x03\x02\x02\x02Y\u015F\x03\x02\x02\x02[\u0164\x03\x02" +
		"\x02\x02]\u0169\x03\x02\x02\x02_\u016D\x03\x02\x02\x02a\u0173\x03\x02" +
		"\x02\x02c\u017A\x03\x02\x02\x02e\u0180\x03\x02\x02\x02g\u0182\x03\x02" +
		"\x02\x02i\u0184\x03\x02\x02\x02k\u018D\x03\x02\x02\x02m\u0193\x03\x02" +
		"\x02\x02o\u0199\x03\x02\x02\x02q\u019E\x03\x02\x02\x02s\u01A4\x03\x02" +
		"\x02\x02u\u01B4\x03\x02\x02\x02w\u01B6\x03\x02\x02\x02y\u01C7\x03\x02" +
		"\x02\x02{\u01DE\x03\x02\x02\x02}\u01E5\x03\x02\x02\x02\x7F\u01EB\x03\x02" +
		"\x02\x02\x81\u01F2\x03\x02\x02\x02\x83\u0202\x03\x02\x02\x02\x85\x86\x07" +
		"=\x02\x02\x86\x04\x03\x02\x02\x02\x87\x88\x07U\x02\x02\x88\x89\x07V\x02" +
		"\x02\x89\x8A\x07C\x02\x02\x8A\x8B\x07T\x02\x02\x8B\x8C\x07V\x02\x02\x8C" +
		"\x8D\x07\"\x02\x02\x8D\x8E\x07F\x02\x02\x8E\x8F\x07C\x02\x02\x8F\x90\x07" +
		"V\x02\x02\x90\x91\x07G\x02\x02\x91\x06\x03\x02\x02\x02\x92\x93\x07G\x02" +
		"\x02\x93\x94\x07P\x02\x02\x94\x95\x07F\x02\x02\x95\x96\x07\"\x02\x02\x96" +
		"\x97\x07F\x02\x02\x97\x98\x07C\x02\x02\x98\x99\x07V\x02\x02\x99\x9A\x07" +
		"G\x02\x02\x9A\b\x03\x02\x02\x02\x9B\x9C\x07U\x02\x02\x9C\x9D\x07V\x02" +
		"\x02\x9D\x9E\x07C\x02\x02\x9E\x9F\x07T\x02\x02\x9F\xB2\x07V\x02\x02\xA0" +
		"\xA1\x07G\x02\x02\xA1\xA2\x07P\x02\x02\xA2\xB2\x07F\x02\x02\xA3\xA4\x07" +
		"U\x02\x02\xA4\xA5\x07W\x02\x02\xA5\xA6\x07D\x02\x02\xA6\xA7\x07L\x02\x02" +
		"\xA7\xA8\x07G\x02\x02\xA8\xA9\x07E\x02\x02\xA9\xB2\x07V\x02\x02\xAA\xAB" +
		"\x07V\x02\x02\xAB\xAC\x07G\x02\x02\xAC\xAD\x07C\x02\x02\xAD\xAE\x07E\x02" +
		"\x02\xAE\xAF\x07J\x02\x02\xAF\xB0\x07G\x02\x02\xB0\xB2\x07T\x02\x02\xB1" +
		"\x9B\x03\x02\x02\x02\xB1\xA0\x03\x02\x02\x02\xB1\xA3\x03\x02\x02\x02\xB1" +
		"\xAA\x03\x02\x02\x02\xB2\n\x03\x02\x02\x02\xB3\xB4\x07K\x02\x02\xB4\xB5" +
		"\x07P\x02\x02\xB5\xCD\x07V\x02\x02\xB6\xB7\x07D\x02\x02\xB7\xB8\x07Q\x02" +
		"\x02\xB8\xB9\x07Q\x02\x02\xB9\xCD\x07N\x02\x02\xBA\xBB\x07U\x02\x02\xBB" +
		"\xBC\x07V\x02\x02\xBC\xBD\x07T\x02\x02\xBD\xBE\x07K\x02\x02\xBE\xBF\x07" +
		"P\x02\x02\xBF\xCD\x07I\x02\x02\xC0\xC1\x07F\x02\x02\xC1\xC2\x07C\x02\x02" +
		"\xC2\xC3\x07V\x02\x02\xC3\xCD\x07G\x02\x02\xC4\xC5\x07V\x02\x02\xC5\xC6" +
		"\x07K\x02\x02\xC6\xC7\x07O\x02\x02\xC7\xCD\x07G\x02\x02\xC8\xC9\x07X\x02" +
		"\x02\xC9\xCA\x07Q\x02\x02\xCA\xCB\x07K\x02\x02\xCB\xCD\x07F\x02\x02\xCC" +
		"\xB3\x03\x02\x02\x02\xCC\xB6\x03\x02\x02\x02\xCC\xBA\x03\x02\x02\x02\xCC" +
		"\xC0\x03\x02\x02\x02\xCC\xC4\x03\x02\x02\x02\xCC\xC8\x03\x02\x02\x02\xCD" +
		"\f\x03\x02\x02\x02\xCE\xCF\x07E\x02\x02\xCF\xD0\x07N\x02\x02\xD0\xD1\x07" +
		"C\x02\x02\xD1\xD2\x07U\x02\x02\xD2\xD3\x07U\x02\x02\xD3\x0E\x03\x02\x02" +
		"\x02\xD4\xD5\x07F\x02\x02\xD5\xD6\x07C\x02\x02\xD6\xD7\x07[\x02\x02\xD7" +
		"\x10\x03\x02\x02\x02\xD8\xD9\x07E\x02\x02\xD9\xDA\x07N\x02\x02\xDA\xDB" +
		"\x07C\x02\x02\xDB\xDC\x07U\x02\x02\xDC\xDD\x07U\x02\x02\xDD\xDE\x07G\x02" +
		"\x02\xDE\xDF\x07U\x02\x02\xDF\x12\x03\x02\x02\x02\xE0\xE1\x07F\x02\x02" +
		"\xE1\xE2\x07C\x02\x02\xE2\xE3\x07[\x02\x02\xE3\xE4\x07U\x02\x02\xE4\x14" +
		"\x03\x02\x02\x02\xE5\xE6\x07,\x02\x02\xE6\x16\x03\x02\x02\x02\xE7\xE8" +
		"\x071\x02\x02\xE8\x18\x03\x02\x02\x02\xE9\xEA\x07-\x02\x02\xEA\x1A\x03" +
		"\x02\x02\x02\xEB\xEC\x07/\x02\x02\xEC\x1C\x03\x02\x02\x02\xED\xEE\x07" +
		"?\x02\x02\xEE\xEF\x07?\x02\x02\xEF\x1E\x03\x02\x02\x02\xF0\xF1\x07#\x02" +
		"\x02\xF1\xF2\x07?\x02\x02\xF2 \x03\x02\x02\x02\xF3\xF4\x07>\x02\x02\xF4" +
		"\"\x03\x02\x02\x02\xF5\xF6\x07@\x02\x02\xF6$\x03\x02\x02\x02\xF7\xF8\x07" +
		">\x02\x02\xF8\xF9\x07?\x02\x02\xF9&\x03\x02\x02\x02\xFA\xFB\x07@\x02\x02" +
		"\xFB\xFC\x07?\x02\x02\xFC(\x03\x02\x02\x02\xFD\xFE\x07C\x02\x02\xFE\xFF" +
		"\x07P\x02\x02\xFF\u0100\x07F\x02\x02\u0100*\x03\x02\x02\x02\u0101\u0102" +
		"\x07Q\x02\x02\u0102\u0103\x07T\x02\x02\u0103,\x03\x02\x02\x02\u0104\u0105" +
		"\x07P\x02\x02\u0105\u0106\x07Q\x02\x02\u0106\u0107\x07V\x02\x02\u0107" +
		".\x03\x02\x02\x02\u0108\u0109\x07K\x02\x02\u0109\u010A\x07P\x02\x02\u010A" +
		"0\x03\x02\x02\x02\u010B\u010C\x07B\x02\x02\u010C2\x03\x02\x02\x02\u010D" +
		"\u010E\x07*\x02\x02\u010E4\x03\x02\x02\x02\u010F\u0110\x07+\x02\x02\u0110" +
		"6\x03\x02\x02\x02\u0111\u0112\x07]\x02\x02\u01128\x03\x02\x02\x02\u0113" +
		"\u0114\x07_\x02\x02\u0114:\x03\x02\x02\x02\u0115\u0116\x070\x02\x02\u0116" +
		"<\x03\x02\x02\x02\u0117\u0118\x07.\x02\x02\u0118>\x03\x02\x02\x02\u0119" +
		"\u011A\x07<\x02\x02\u011A@\x03\x02\x02\x02\u011B\u011C\x07?\x02\x02\u011C" +
		"B\x03\x02\x02\x02\u011D\u011E\x07E\x02\x02\u011E\u011F\x07Q\x02\x02\u011F" +
		"\u0120\x07N\x02\x02\u0120\u0121\x07N\x02\x02\u0121\u0122\x07G\x02\x02" +
		"\u0122\u0123\x07E\x02\x02\u0123\u0124\x07V\x02\x02\u0124\u0125\x07K\x02" +
		"\x02\u0125\u0126\x07Q\x02\x02\u0126\u0127\x07P\x02\x02\u0127\u0128\x07" +
		"\"\x02\x02\u0128\u0129\x07Q\x02\x02\u0129\u012A\x07H\x02\x02\u012AD\x03" +
		"\x02\x02\x02\u012B\u012C\x07C\x02\x02\u012C\u012D\x07F\x02\x02\u012D\u012E" +
		"\x07F\x02\x02\u012EF\x03\x02\x02\x02\u012F\u0130\x07W\x02\x02\u0130\u0131" +
		"\x07R\x02\x02\u0131\u0132\x07F\x02\x02\u0132\u0133\x07C\x02\x02\u0133" +
		"\u0134\x07V\x02\x02\u0134\u0135\x07G\x02\x02\u0135H\x03\x02\x02\x02\u0136" +
		"\u0137\x07F\x02\x02\u0137\u0138\x07G\x02\x02\u0138\u0139\x07N\x02\x02" +
		"\u0139\u013A\x07G\x02\x02\u013A\u013B\x07V\x02\x02\u013B\u013C\x07G\x02" +
		"\x02\u013CJ\x03\x02\x02\x02\u013D\u013E\x07I\x02\x02\u013E\u013F\x07G" +
		"\x02\x02\u013F\u0140\x07V\x02\x02\u0140L\x03\x02\x02\x02\u0141\u0142\x07" +
		"Y\x02\x02\u0142\u0143\x07J\x02\x02\u0143\u0144\x07G\x02\x02\u0144\u0145" +
		"\x07T\x02\x02\u0145\u0146\x07G\x02\x02\u0146N\x03\x02\x02\x02\u0147\u0148" +
		"\x07U\x02\x02\u0148\u0149\x07C\x02\x02\u0149\u014A\x07V\x02\x02\u014A" +
		"\u014B\x07K\x02\x02\u014B\u014C\x07U\x02\x02\u014C\u014D\x07H\x02\x02" +
		"\u014D\u014E\x07[\x02\x02\u014E\u014F\x07K\x02\x02\u014F\u0150\x07P\x02" +
		"\x02\u0150\u0151\x07I\x02\x02\u0151P\x03\x02\x02\x02\u0152\u0153\x07C" +
		"\x02\x02\u0153\u0154\x07V\x02\x02\u0154R\x03\x02\x02\x02\u0155\u0156\x07" +
		"Q\x02\x02\u0156\u0157\x07P\x02\x02\u0157T\x03\x02\x02\x02\u0158\u0159" +
		"\x07F\x02\x02\u0159\u015A\x07G\x02\x02\u015A\u015B\x07H\x02\x02\u015B" +
		"V\x03\x02\x02\x02\u015C\u015D\x07K\x02\x02\u015D\u015E\x07H\x02\x02\u015E" +
		"X\x03\x02\x02\x02\u015F\u0160\x07G\x02\x02\u0160\u0161\x07N\x02\x02\u0161" +
		"\u0162\x07K\x02\x02\u0162\u0163\x07H\x02\x02\u0163Z\x03\x02\x02\x02\u0164" +
		"\u0165\x07G\x02\x02\u0165\u0166\x07N\x02\x02\u0166\u0167\x07U\x02\x02" +
		"\u0167\u0168\x07G\x02\x02\u0168\\\x03\x02\x02\x02\u0169\u016A\x07H\x02" +
		"\x02\u016A\u016B\x07Q\x02\x02\u016B\u016C\x07T\x02\x02\u016C^\x03\x02" +
		"\x02\x02\u016D\u016E\x07Y\x02\x02\u016E\u016F\x07J\x02\x02\u016F\u0170" +
		"\x07K\x02\x02\u0170\u0171\x07N\x02\x02\u0171\u0172\x07G\x02\x02\u0172" +
		"`\x03\x02\x02\x02\u0173\u0174\x07T\x02\x02\u0174\u0175\x07G\x02\x02\u0175" +
		"\u0176\x07V\x02\x02\u0176\u0177\x07W\x02\x02\u0177\u0178\x07T\x02\x02" +
		"\u0178\u0179\x07P\x02\x02\u0179b\x03\x02\x02\x02\u017A\u017B\x07D\x02" +
		"\x02\u017B\u017C\x07T\x02\x02\u017C\u017D\x07G\x02\x02\u017D\u017E\x07" +
		"C\x02\x02\u017E\u017F\x07M\x02\x02\u017Fd\x03\x02\x02\x02\u0180\u0181" +
		"\x07}\x02\x02\u0181f\x03\x02\x02\x02\u0182\u0183\x07\x7F\x02\x02\u0183" +
		"h\x03\x02\x02\x02\u0184\u0185\x07F\x02\x02\u0185\u0186\x07K\x02\x02\u0186" +
		"\u0187\x07U\x02\x02\u0187\u0188\x07V\x02\x02\u0188\u0189\x07K\x02\x02" +
		"\u0189\u018A\x07P\x02\x02\u018A\u018B\x07E\x02\x02\u018B\u018C\x07V\x02" +
		"\x02\u018Cj\x03\x02\x02\x02\u018D\u018E\x07R\x02\x02\u018E\u018F\x07T" +
		"\x02\x02\u018F\u0190\x07K\x02\x02\u0190\u0191\x07P\x02\x02\u0191\u0192" +
		"\x07V\x02\x02\u0192l\x03\x02\x02\x02\u0193\u0194\x07F\x02\x02\u0194\u0195" +
		"\x07C\x02\x02\u0195\u0196\x07V\x02\x02\u0196\u0197\x07G\x02\x02\u0197" +
		"\u0198\x07U\x02\x02\u0198n\x03\x02\x02\x02\u0199\u019A\x07N\x02\x02\u019A" +
		"\u019B\x07Q\x02\x02\u019B\u019C\x07C\x02\x02\u019C\u019D\x07F\x02\x02" +
		"\u019Dp\x03\x02\x02\x02\u019E\u019F\x07F\x02\x02\u019F\u01A0\x07W\x02" +
		"\x02\u01A0\u01A1\x07O\x02\x02\u01A1\u01A2\x07R\x02\x02\u01A2r\x03\x02" +
		"\x02\x02\u01A3\u01A5\x07/\x02\x02\u01A4\u01A3\x03\x02\x02\x02\u01A4\u01A5" +
		"\x03\x02\x02\x02\u01A5\u01A7\x03\x02\x02\x02\u01A6\u01A8\t\x02\x02\x02" +
		"\u01A7\u01A6\x03\x02\x02\x02\u01A8\u01A9\x03\x02\x02\x02\u01A9\u01A7\x03" +
		"\x02\x02\x02\u01A9\u01AA\x03\x02\x02\x02\u01AAt\x03\x02\x02\x02\u01AB" +
		"\u01AC\x07V\x02\x02\u01AC\u01AD\x07t\x02\x02\u01AD\u01AE\x07w\x02\x02" +
		"\u01AE\u01B5\x07g\x02\x02\u01AF\u01B0\x07H\x02\x02\u01B0\u01B1\x07c\x02" +
		"\x02\u01B1\u01B2\x07n\x02\x02\u01B2\u01B3\x07u\x02\x02\u01B3\u01B5\x07" +
		"g\x02\x02\u01B4\u01AB\x03\x02\x02\x02\u01B4\u01AF\x03\x02\x02\x02\u01B5" +
		"v\x03\x02\x02\x02\u01B6\u01BA\x07$\x02\x02\u01B7\u01B9\n\x03\x02\x02\u01B8" +
		"\u01B7\x03\x02\x02\x02\u01B9\u01BC\x03\x02\x02\x02\u01BA\u01B8\x03\x02" +
		"\x02\x02\u01BA\u01BB\x03\x02\x02\x02\u01BB\u01BD\x03\x02\x02\x02\u01BC" +
		"\u01BA\x03\x02\x02\x02\u01BD\u01BE\x07$\x02\x02\u01BEx\x03\x02\x02\x02" +
		"\u01BF\u01C1\x072\x02\x02\u01C0\u01BF\x03\x02\x02\x02\u01C0\u01C1\x03" +
		"\x02\x02\x02\u01C1\u01C2\x03\x02\x02\x02\u01C2\u01C8\t\x04\x02\x02\u01C3" +
		"\u01C4\t\x05\x02\x02\u01C4\u01C8\t\x02\x02\x02\u01C5\u01C6\x075\x02\x02" +
		"\u01C6\u01C8\t\x06\x02\x02\u01C7\u01C0\x03\x02\x02\x02\u01C7\u01C3\x03" +
		"\x02\x02\x02\u01C7\u01C5\x03\x02\x02\x02\u01C8\u01C9\x03\x02\x02\x02\u01C9" +
		"\u01D0\x071\x02\x02\u01CA\u01CC\x072\x02\x02\u01CB\u01CA\x03\x02\x02\x02" +
		"\u01CB\u01CC\x03\x02\x02\x02\u01CC\u01CD\x03\x02\x02\x02\u01CD\u01D1\t" +
		"\x04\x02\x02\u01CE\u01CF\x073\x02\x02\u01CF\u01D1\t\x07\x02\x02\u01D0" +
		"\u01CB\x03\x02\x02\x02\u01D0\u01CE\x03\x02\x02\x02\u01D1\u01D2\x03\x02" +
		"\x02\x02\u01D2\u01D3\x071\x02\x02\u01D3\u01D4\t\x02\x02\x02\u01D4\u01D5" +
		"\t\x02\x02\x02\u01D5\u01D6\t\x02\x02\x02\u01D6\u01D7\t\x02\x02\x02\u01D7" +
		"z\x03\x02\x02\x02\u01D8\u01DA\t\x06\x02\x02\u01D9\u01D8\x03\x02\x02\x02" +
		"\u01D9\u01DA\x03\x02\x02\x02\u01DA\u01DB\x03\x02\x02\x02\u01DB\u01DF\t" +
		"\x02\x02\x02\u01DC\u01DD\x074\x02\x02\u01DD\u01DF\t\b\x02\x02\u01DE\u01D9" +
		"\x03\x02\x02\x02\u01DE\u01DC\x03\x02\x02\x02\u01DF\u01E0\x03\x02\x02\x02" +
		"\u01E0\u01E1\x07<\x02\x02\u01E1\u01E2\t\t\x02\x02\u01E2\u01E3\t\x02\x02" +
		"\x02\u01E3|\x03\x02\x02\x02\u01E4\u01E6\t\n\x02\x02\u01E5\u01E4\x03\x02" +
		"\x02\x02\u01E6\u01E7\x03\x02\x02\x02\u01E7\u01E5\x03\x02\x02\x02\u01E7" +
		"\u01E8\x03\x02\x02\x02\u01E8\u01E9\x03\x02\x02\x02\u01E9\u01EA\b?\x02" +
		"\x02\u01EA~\x03\x02\x02\x02\u01EB\u01EF\t\v\x02\x02\u01EC\u01EE\t\f\x02" +
		"\x02\u01ED\u01EC\x03\x02\x02\x02\u01EE\u01F1\x03\x02\x02\x02\u01EF\u01ED" +
		"\x03\x02\x02\x02\u01EF\u01F0\x03\x02\x02\x02\u01F0\x80\x03\x02\x02\x02" +
		"\u01F1\u01EF\x03\x02\x02\x02\u01F2\u01F3\x071\x02\x02\u01F3\u01F4\x07" +
		"1\x02\x02\u01F4\u01F8\x03\x02\x02\x02\u01F5\u01F7\v\x02\x02\x02\u01F6" +
		"\u01F5\x03\x02\x02\x02\u01F7\u01FA\x03\x02\x02\x02\u01F8\u01F9\x03\x02" +
		"\x02\x02\u01F8\u01F6\x03\x02\x02\x02\u01F9\u01FC\x03\x02\x02\x02\u01FA" +
		"\u01F8\x03\x02\x02\x02\u01FB\u01FD\x07\x0F\x02\x02\u01FC\u01FB\x03\x02" +
		"\x02\x02\u01FC\u01FD\x03\x02\x02\x02\u01FD\u01FE\x03\x02\x02\x02\u01FE" +
		"\u01FF\x07\f\x02\x02\u01FF\u0200\x03\x02\x02\x02\u0200\u0201\bA\x03\x02" +
		"\u0201\x82\x03\x02\x02\x02\u0202\u0203\x071\x02\x02\u0203\u0204\x07,\x02" +
		"\x02\u0204\u0208\x03\x02\x02\x02\u0205\u0207\v\x02\x02\x02\u0206\u0205" +
		"\x03\x02\x02\x02\u0207\u020A\x03\x02\x02\x02\u0208\u0209\x03\x02\x02\x02" +
		"\u0208\u0206\x03\x02\x02\x02\u0209\u020B\x03\x02\x02\x02\u020A\u0208\x03" +
		"\x02\x02\x02\u020B\u020C\x07,\x02\x02\u020C\u020D\x071\x02\x02\u020D\u020E" +
		"\x03\x02\x02\x02\u020E\u020F\bB\x03\x02\u020F\x84\x03\x02\x02\x02\x14" +
		"\x02\xB1\xCC\u01A4\u01A9\u01B4\u01BA\u01C0\u01C7\u01CB\u01D0\u01D9\u01DE" +
		"\u01E7\u01EF\u01F8\u01FC\u0208\x04\b\x02\x02\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SchedulerLexer.__ATN) {
			SchedulerLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SchedulerLexer._serializedATN));
		}

		return SchedulerLexer.__ATN;
	}

}

